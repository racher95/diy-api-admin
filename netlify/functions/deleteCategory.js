import { readJSON, writeJSON, deletePath } from "./_shared.mjs";
export async function handler(event){try{if(event.httpMethod!=="POST")return{statusCode:405,body:"Method Not Allowed"};const {id,cascade=false}=JSON.parse(event.body||"{}");if(!id)return{statusCode:400,body:"category id required"};const cpPath=`cats_products/${id}.json`; const curCP=await readJSON(cpPath);const prodIds=(curCP.json?.products||[]).map(p=>p.id);await deletePath(cpPath,`DELETE cats_products ${id}`);const cPath="cats/cat.json"; const curC=await readJSON(cPath); let cats=curC.json||[];cats=cats.filter(c=>c.id!==id); await writeJSON(cPath,cats,curC.sha,`REMOVE category ${id}`);if(cascade){for(const pid of prodIds){await deletePath(`products/${pid}.json`,`DELETE product ${pid}`).catch(()=>{});await deletePath(`products_comments/${pid}.json`,`DELETE comments for product ${pid}`).catch(()=>{});}}return{statusCode:200,body:JSON.stringify({ok:true,deletedProducts:cascade?prodIds.length:0})};}catch(e){return{statusCode:500,body:String(e)}}}